/**
 * eDesign - Runtime - Web Socket Server Package
 *
 * @copyright 2024 Elrest Automations Systeme GMBH
 */
import { Observable } from 'rxjs';
import { AbstractAPIService } from '.';
import * as WDXSchema from '@wago/wdx-schema-base';
export declare class AlarmService extends AbstractAPIService {
    delete(uuid: string): Observable<WDXSchema.WDX.Schema.Model.Alarm.Alarm>;
    confirmAll(): Observable<null>;
    confirm(uuid: string): Observable<null>;
    detail(uuid: string): Observable<WDXSchema.WDX.Schema.Model.Alarm.Alarm>;
    save(alarm: WDXSchema.WDX.Schema.Model.Alarm.Alarm): Observable<WDXSchema.WDX.Schema.Model.Alarm.Alarm>;
    list(active?: boolean, offset?: number, limit?: number): Observable<WDXSchema.WDX.Schema.Model.Pagination.Response<WDXSchema.WDX.Schema.Model.Alarm.Alarm>>;
    listAlarmHistory(
    /**
     * Alarm Code
     */
    alarmCode: number | undefined, offset?: number, limit?: number): Observable<WDXSchema.WDX.Schema.Model.Pagination.Response<WDXSchema.WDX.Schema.Model.Alarm.AlarmHistory>>;
    unregister(): Observable<undefined>;
    register(): Observable<WDXSchema.WDX.Schema.Model.Alarm.Alarm | undefined>;
    getStatus(
    /**
     * Alarm code number
     */
    code: number): Observable<WDXSchema.WDX.Schema.Model.Alarm.AlarmStatus>;
    setActive(
    /**
     * Alarm code number
     */
    code: number): Observable<WDXSchema.WDX.Schema.Model.Alarm.AlarmStatus>;
    setInactive(
    /**
     * Alarm code number
     */
    code: number): Observable<WDXSchema.WDX.Schema.Model.Alarm.AlarmStatus>;
}
