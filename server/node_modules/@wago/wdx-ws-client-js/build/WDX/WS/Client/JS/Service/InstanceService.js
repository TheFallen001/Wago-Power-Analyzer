/**
 * eDesign - Runtime - Web Socket Server Package
 *
 * @copyright 2024 Elrest Automations Systeme GMBH
 */
'use strict';
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstanceService = void 0;
const rxjs_1 = require("rxjs");
const _1 = require(".");
const WDXSchema = __importStar(require("@wago/wdx-schema-base"));
class InstanceService extends _1.AbstractAPIService {
    /**
     * Starts eDesign Instance instance
     */
    delete(uuid) {
        const request = new WDXSchema.WDX.Schema.Message.Instance.DeleteRequest(uuid);
        const response = new rxjs_1.Subject;
        const subscription = this._clientService.incommingMessages.subscribe((message) => {
            if (message.type ===
                WDXSchema.WDX.Schema.Message.Type.InstanceDeleteResponse &&
                message.uuid === request.uuid) {
                (message.error) ? response.error(message.error) :
                    response.next(message.body);
                response.complete();
                subscription.unsubscribe();
            }
        });
        this._clientService.sendMessage(request);
        return response.asObservable();
    }
    logSubscribe(uuid) {
        const request = new WDXSchema.WDX.Schema.Message.Instance.LogSubscribeRequestMessage(uuid);
        const response = new rxjs_1.Subject();
        const topic = `${WDXSchema.WDX.Schema.Message.Type.InstanceLog}-${uuid}`;
        this._clientService.incommingMessages.subscribe((message) => {
            if (
            /** Subscribe response */
            (message.type ===
                WDXSchema.WDX.Schema.Message.Type
                    .InstanceLogSubscribeResponse &&
                message.uuid === request.uuid)
                /** Monitoring Message */
                ||
                    (message.type === WDXSchema.WDX.Schema.Message.Type.InstanceLog &&
                        topic === message.topic)) {
                (message.error) ? response.error(message.error) :
                    response.next(message.body);
            }
        });
        this._clientService.sendMessage(request);
        return response.asObservable();
    }
    logUnsubscribe(uuid) {
        const request = new WDXSchema.WDX.Schema.Message.Instance.LogUnsubscribeRequestMessage(uuid);
        const response = new rxjs_1.Subject;
        const subscription = this._clientService.incommingMessages.subscribe((message) => {
            if (message.type ===
                WDXSchema.WDX.Schema.Message.Type
                    .InstanceLogUnsubscribeResponse &&
                request.uuid === message.uuid) {
                (message.error) ? response.error(message.error) :
                    response.next(message.body);
                response.complete();
                subscription.unsubscribe();
            }
        });
        this._clientService.sendMessage(request);
        return response.asObservable();
    }
    /**
     * Lists eDesign Instances
     *
     */
    list(conditions) {
        const request = new WDXSchema.WDX.Schema.Message.Instance.ListRequest(conditions);
        const response = new rxjs_1.Subject;
        const subscription = this._clientService.incommingMessages.subscribe((message) => {
            if (message.type ===
                WDXSchema.WDX.Schema.Message.Type.InstanceListResponse &&
                message.uuid === request.uuid) {
                (message.error) ? response.error(message.error) :
                    response.next(message.body);
                response.complete();
                subscription.unsubscribe();
            }
        });
        this._clientService.sendMessage(request);
        return response.asObservable();
    }
    /**
     * Starts eDesign Instance instance
     */
    start(uuid) {
        const request = new WDXSchema.WDX.Schema.Message.Instance.StartRequest(uuid);
        const response = new rxjs_1.Subject;
        const subscription = this._clientService.incommingMessages.subscribe((message) => {
            if (message.type ===
                WDXSchema.WDX.Schema.Message.Type.InstanceStartResponse &&
                message.uuid === request.uuid) {
                (message.error) ? response.error(message.error) :
                    response.next(message.body);
                response.complete();
                subscription.unsubscribe();
            }
        });
        this._clientService.sendMessage(request);
        return response.asObservable();
    }
    detail(uuid) {
        const request = new WDXSchema.WDX.Schema.Message.Instance.DetailRequest(uuid);
        const response = new rxjs_1.Subject();
        const subscription = this._clientService.incommingMessages.subscribe((message) => {
            if (message.type ===
                WDXSchema.WDX.Schema.Message.Type
                    .InstanceDetailResponse &&
                message.uuid === request.uuid) {
                (message.error) ? response.error(message.error) :
                    response.next(message.body);
                response.complete();
                subscription.unsubscribe();
            }
        });
        this._clientService.sendMessage(request);
        return response.asObservable();
    }
    /**
     * Stops eDesign Runtime Instance
     */
    stop(uuid) {
        const request = new WDXSchema.WDX.Schema.Message.Instance.StopRequest(uuid);
        const response = new rxjs_1.Subject;
        const subscription = this._clientService.incommingMessages.subscribe((message) => {
            if (message.type ===
                WDXSchema.WDX.Schema.Message.Type.InstanceStopResponse &&
                message.uuid === request.uuid) {
                message.error ? response.error(message.error) :
                    response.next(message.body);
                response.complete();
                subscription.unsubscribe();
            }
        });
        this._clientService.sendMessage(request);
        return response.asObservable();
    }
    /**
     * Restart eDesign Instance instance
     */
    restart(uuid) {
        const request = new WDXSchema.WDX.Schema.Message.Instance.RestartRequest(uuid);
        const response = new rxjs_1.Subject;
        const subscription = this._clientService.incommingMessages.subscribe((message) => {
            if (message.type ===
                WDXSchema.WDX.Schema.Message.Type
                    .InstanceRestartResponse &&
                message.uuid === request.uuid) {
                (message.error) ? response.error(message.error) :
                    response.next(message.body);
                response.complete();
                subscription.unsubscribe();
            }
        });
        this._clientService.sendMessage(request);
        return response.asObservable();
    }
    /**
     * Request WDX Whois Instance information
     */
    whois(
    /**
     * Instance name
     */
    name) {
        const request = new WDXSchema.WDX.Schema.Message.Instance.WhoIsRequest(name);
        const response = new rxjs_1.Subject;
        const subscription = this._clientService.incommingMessages.subscribe((message) => {
            if (message.type ===
                WDXSchema.WDX.Schema.Message.Type.InstanceWhoIsResponse &&
                message.uuid === request.uuid) {
                (message.error) ? response.error(message.error) :
                    response.next(message.body);
                response.complete();
                subscription.unsubscribe();
            }
        });
        this._clientService.sendMessage(request);
        return response.asObservable();
    }
    /**
     * Save eDesign Instance
     */
    save(instance) {
        const request = new WDXSchema.WDX.Schema.Message.Instance.SaveRequest(instance);
        const response = new rxjs_1.Subject;
        const subscription = this._clientService.incommingMessages.subscribe((message) => {
            if (message.type ===
                WDXSchema.WDX.Schema.Message.Type.InstanceSaveResponse &&
                message.uuid === request.uuid) {
                (message.error) ? response.error(message.error) :
                    response.next(message.body);
                response.complete();
                subscription.unsubscribe();
            }
        });
        this._clientService.sendMessage(request);
        return response.asObservable();
    }
}
exports.InstanceService = InstanceService;
//# sourceMappingURL=InstanceService.js.map